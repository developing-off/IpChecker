<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /D+btAiankSlBgAAAABJRU5ErkJggg==
</value>
  </data>
</root>